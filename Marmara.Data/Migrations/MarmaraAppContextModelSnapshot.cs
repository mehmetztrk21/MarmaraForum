// <auto-generated />
using System;
using Marmara.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Marmara.Data.Migrations
{
    [DbContext(typeof(MarmaraAppContext))]
    partial class MarmaraAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Marmara.Entity.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("likes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Context = "Bugün okul yok.",
                            Date = new DateTime(2022, 1, 10, 10, 47, 13, 891, DateTimeKind.Local).AddTicks(9208),
                            Title = "Okul yok",
                            likes = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Context = "Bugün okul güzel.",
                            Date = new DateTime(2022, 1, 20, 10, 47, 13, 893, DateTimeKind.Local).AddTicks(847),
                            Title = "Okul güzel",
                            likes = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Context = "Tanışma toplantısına davetlisin.",
                            Date = new DateTime(2022, 1, 10, 10, 47, 13, 893, DateTimeKind.Local).AddTicks(990),
                            Title = "Etkileşim kulübü",
                            likes = 0
                        });
                });

            modelBuilder.Entity("Marmara.Entity.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Okul"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kulüpler"
                        });
                });

            modelBuilder.Entity("Marmara.Entity.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Marmara.Entity.Entities.Blog", b =>
                {
                    b.HasOne("Marmara.Entity.Entities.Category", null)
                        .WithMany("Blogs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Marmara.Entity.Entities.Comment", b =>
                {
                    b.HasOne("Marmara.Entity.Entities.Blog", null)
                        .WithMany("Comments")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Marmara.Entity.Entities.Blog", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Marmara.Entity.Entities.Category", b =>
                {
                    b.Navigation("Blogs");
                });
#pragma warning restore 612, 618
        }
    }
}
